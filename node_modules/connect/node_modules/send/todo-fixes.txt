lib/send.js

https://github.com/visionmedia/send/commit/3a90c005f7c03c31562583fd881da39b2e35d997
 fs.stat(path, function(err, stat){
     if (err) return self.onStatError(err);
+    if (!(self.req.socket && self.req.socket._handle)) {
+      self.emit('error', new Error("Connection closed"));
+      return;
+    }
     if (stat.isDirectory()) return self.redirect(self.path);
     self.emit('file', path, stat);
     self.send(path, stat);
     

actually check:
https://github.com/jshttp/on-finished/blob/master/index.js
 if (typeof msg.finished === 'boolean') {
    // OutgoingMessage
    return Boolean(!socket || msg.finished || !socket.writable)
  }

  if (typeof msg.complete === 'boolean') {
    // IncomingMessage
    return Boolean(!socket || msg.complete || !socket.readable)
  }

more to done simply: Ignore stream errors after request ends
https://github.com/visionmedia/send/commit/7d1b1941f35c1e05dc88afbd360afc7416f0e780

SendStream.prototype.stream = function(path, options){
   // TODO: this is all lame, refactor meeee
+  var finished = false;
   var self = this;
   var res = this.res;
   var req = this.req;
@@ -520,11 +522,17 @@ SendStream.prototype.stream = function(path, options){
   this.emit('stream', stream);
   stream.pipe(res);
 
-  // socket closed, done with the fd
-  req.on('close', stream.destroy.bind(stream));
+  // request finished, done with the fd
+  onFinished(req, function onfinished(){
+    finished = true;
+    stream.destroy();
+  });
 
   // error handling code-smell
-  stream.on('error', function(err){
+  stream.on('error', function onerror(err){
+    // request already finished
+    if (finished) return;
+
     // no hope in responding
     if (res._header) {
       console.error(err.stack);
@@ -538,7 +546,7 @@ SendStream.prototype.stream = function(path, options){
   });
 
   // end
-  stream.on('end', function(){
+  stream.on('end', function onend(){
     self.emit('end');
   });
 };
diff --git a/package.json b/package.json
index 5f4163a..35a2975 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,7 @@
   "author": "TJ Holowaychuk <tj@vision-media.ca>",
   "dependencies": {
     "debug": "0.8.1",
+    "finished": "1.1.4",


https://github.com/EvanHahn/send/commit/f7bf193642080d3fd5b4f0c609a5a5043fdf1048
Round max-age to nearest second
if (!res.getHeader('Accept-Ranges')) res.setHeader('Accept-Ranges', 'bytes');
   if (!res.getHeader('Date')) res.setHeader('Date', new Date().toUTCString());
-  if (!res.getHeader('Cache-Control')) res.setHeader('Cache-Control', 'public, max-age=' + (this._maxage / 1000));
+  if (!res.getHeader('Cache-Control')) res.setHeader('Cache-Control', 'public, max-age=' + Math.round(this._maxage / 1000));
   if (!res.getHeader('Last-Modified')) res.setHeader('Last-Modified', stat.mtime.toUTCString());
 

Release 0.2.0
https://github.com/visionmedia/send/commit/a72837935d19672f395ba77680a97cd2a0ea007a
https://github.com/visionmedia/send/commit/5dd1f1ac706380b6850cc2ebb3edc5415861641e
     "mime": "~1.2.9",
-    "fresh": "0.2.0",
-    "range-parser": "0.0.4"
+    "fresh": "~0.2.1",
+    "range-parser": "~1.0.0"
   },
 